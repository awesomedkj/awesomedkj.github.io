<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>首页-丁康健的个人博客</title>
  
  <subtitle>假作真时真亦假</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://actionding.github.io/"/>
  <updated>2020-07-20T03:17:14.429Z</updated>
  <id>https://actionding.github.io/</id>
  
  <author>
    <name>丁康健</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Java基础】3 运算符</title>
    <link href="https://actionding.github.io/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%913%20%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>https://actionding.github.io/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%913%20%E8%BF%90%E7%AE%97%E7%AC%A6/</id>
    <published>2020-07-04T19:02:04.000Z</published>
    <updated>2020-07-20T03:17:14.429Z</updated>
    
    <content type="html"><![CDATA[<p>算数运算符、赋值运算符、比较运算符、逻辑运算符、位运算符、三元运算符</p><a id="more"></a><h3 id="一、算术运算符"><a href="#一、算术运算符" class="headerlink" title="一、算术运算符"></a>一、算术运算符</h3><table><thead><tr><th align="center"><code>+</code></th><th align="center"><code>-</code></th><th align="center"><code>+</code></th><th align="center"><code>-</code></th><th align="center"><code>*</code></th><th align="center"><code>/</code></th><th align="center"><code>%</code></th><th align="center"><code>++</code></th><th align="center"><code>--</code></th><th align="center"><code>++</code></th><th align="center"><code>--</code></th><th align="center"><code>+</code></th></tr></thead><tbody><tr><td align="center">正号</td><td align="center">负号</td><td align="center">加</td><td align="center">减</td><td align="center">乘</td><td align="center">除</td><td align="center">取余</td><td align="center">前自增</td><td align="center">前自减</td><td align="center">后自增</td><td align="center">后自减</td><td align="center">字符串连接</td></tr></tbody></table><p><strong>1 自增</strong></p><p>​    (前)++：先自增1，后运算<br>​    (后)++：先运算，后自增1</p><p><strong>2 自减</strong></p><p>​    (前)–：先自减1，后运算<br>​    (后)–：先运算，后自减1</p><p><strong>3 连接符</strong>：+（只能使用在String与其他数据类型变量之间使用）</p><h3 id="二、赋值运算符"><a href="#二、赋值运算符" class="headerlink" title="二、赋值运算符"></a>二、赋值运算符</h3><p><code>=</code>、<code>+=</code>、<code>-=</code>、<code>*=</code>、<code>/=</code>、<code>%=</code></p><p><strong>注</strong>：运算的结果不会改变变量本身的数据类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开发中，如果希望变量实现+2的操作，有几种方法？(前提：int num = 10;)</span></span><br><span class="line"><span class="comment">//方式一：num = num + 2;</span></span><br><span class="line"><span class="comment">//方式二：num += 2; (推荐)</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开发中，如果希望变量实现+1的操作，有几种方法？(前提：int num = 10;)</span></span><br><span class="line"><span class="comment">//方式一：num = num + 1;</span></span><br><span class="line"><span class="comment">//方式二：num += 1; </span></span><br><span class="line"><span class="comment">//方式三：num++; (推荐)</span></span><br></pre></td></tr></table></figure><h3 id="三、比较运算符"><a href="#三、比较运算符" class="headerlink" title="三、比较运算符"></a>三、比较运算符</h3><p>也叫<strong>关系运算符</strong></p><p><code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&gt;</code>、<code>&lt;=</code>、<code>&gt;=</code>、<code>instanceof</code></p><blockquote><p>比较运算符的结果都是 boolean 型</p><ol><li><p>&lt;  &gt;=  &lt;= :只能使用在数值类型的数据之间。</p></li><li><p>== 和 !=: 不仅可以使用在数值类型数据之间，还可以使用在其他引用类型变量之间。</p></li></ol></blockquote><h3 id="四、逻辑运算符"><a href="#四、逻辑运算符" class="headerlink" title="四、逻辑运算符"></a>四、逻辑运算符</h3><p>|  <code>&amp;</code>   |  <code>&amp;&amp;</code>  |  <code>|</code>   |  <code>||</code>  |  <code>!</code>   |   <code>^</code>    |<br>| :—-: | :—-: | :—-: | :—-: | :—-: | :——: |<br>| 逻辑与 | 短路与 | 逻辑或 | 短路或 | 逻辑非 | 逻辑异或 |</p><blockquote><p>逻辑运算符操作的都是boolean类型的变量，而且结果也是boolean类型</p></blockquote><h3 id="五、位运算符"><a href="#五、位运算符" class="headerlink" title="五、位运算符"></a>五、位运算符</h3><p>| <code>&lt;&lt;</code> | <code>&gt;&gt;</code> |   <code>&gt;&gt;&gt;</code>    |  <code>&amp;</code>   |  <code>|</code>   |   <code>^</code>    |   <code>~</code>    |<br>| :–: | :–: | :——–: | :—-: | :—-: | :——: | :——: |<br>| 左移 | 右移 | 无符号右移 | 与运算 | 或运算 | 异或运算 | 取反运算 |</p><p><strong>注</strong>：无&lt;&lt;&lt;</p><blockquote><p>位运算是直接对整数的二进制进行的运算，操作的都是整型的数据</p><ol><li>&lt;&lt;：在一定范围内，每向左移1位，相当于 * 2</li><li>&gt;&gt;：在一定范围内，每向右移1位，相当于 / 2</li></ol></blockquote><h3 id="六、三元运算符"><a href="#六、三元运算符" class="headerlink" title="六、三元运算符"></a>六、三元运算符</h3><p><strong>格式</strong>：<code>(条件表达式)?表达式 1:表达式 2;</code></p><p><strong>1</strong> 条件表达式的结果为<strong>boolean</strong>类型 </p><p><strong>2</strong> 根据条件表达式真或假，决定执行表达式1，还是表达式2.</p><p>​     如果表达式为true，则执行表达式1。<br>​     如果表达式为false，则执行表达式2。</p><p><strong>3</strong> 表达式1 和表达式2要求是一致的。</p><p><strong>4</strong> 三元运算符可以嵌套使用</p><p><strong>5</strong> 凡是可以使用三元运算符的地方，都可以改写为if-else；反之，不成立。</p><p><strong>6</strong> 如果程序既可以使用三元运算符，又可以使用if-else结构，那么优先选择三元运算符。原因：简洁、执行效率高。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;算数运算符、赋值运算符、比较运算符、逻辑运算符、位运算符、三元运算符&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://ActionDing.github.io/categories/Java/"/>
    
      <category term="Java基础" scheme="https://ActionDing.github.io/categories/Java/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java" scheme="https://ActionDing.github.io/tags/Java/"/>
    
      <category term="编程" scheme="https://ActionDing.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>【Java基础】2 变量</title>
    <link href="https://actionding.github.io/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%912%20%E5%8F%98%E9%87%8F/"/>
    <id>https://actionding.github.io/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%912%20%E5%8F%98%E9%87%8F/</id>
    <published>2020-07-04T19:02:03.000Z</published>
    <updated>2020-07-20T03:16:59.986Z</updated>
    
    <content type="html"><![CDATA[<p>标识符、保留字、变量</p><a id="more"></a><h3 id="一、关键字与保留字"><a href="#一、关键字与保留字" class="headerlink" title="一、关键字与保留字"></a>一、关键字与保留字</h3><h4 id="1-关键字-keyword"><a href="#1-关键字-keyword" class="headerlink" title="1 关键字(keyword)"></a>1 关键字(keyword)</h4><p><strong>定义</strong>： 被 Java 语言赋予了特殊含义，用做专门用途的字符串（单词）</p><p><strong>特点</strong>： 关键字中所有字母都为<strong>小写</strong></p><p><strong><a href="https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html" target="_blank" rel="noopener">官方地址</a></strong></p><p><img src="/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%912%20%E5%8F%98%E9%87%8F/../images/%E5%85%B3%E9%94%AE%E5%AD%971.png" alt="关键字1"></p><p><img src="/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%912%20%E5%8F%98%E9%87%8F/../images/%E5%85%B3%E9%94%AE%E5%AD%972.png" alt="关键字2"></p><h4 id="2-保留字-reserved-word"><a href="#2-保留字-reserved-word" class="headerlink" title="2 保留字(reserved word)"></a>2 保留字(reserved word)</h4><p><strong>保留字</strong>：现有 Java 版本尚未使用,但以后版本可能会作为关键字使用。自己命名标识符时要避免使用这些保留字</p><ul><li><strong>goto</strong> 、 <strong>const</strong></li><li>命名标识符时要避免使用这些保留字</li></ul><h3 id="二、标识符-Identifier"><a href="#二、标识符-Identifier" class="headerlink" title="二、标识符 (Identifier)"></a>二、标识符 (Identifier)</h3><h4 id="1-定义"><a href="#1-定义" class="headerlink" title="1 定义"></a>1 定义</h4><p>​    Java 对各种变量、方法和类等要素命名时使用的字符序列称为<strong>标识符</strong></p><blockquote><p>凡是自己可以起名字的地方都叫<strong>标识符</strong></p><p>包名、类名、接口名、变量名、方法名、常量名</p></blockquote><h4 id="2-规则"><a href="#2-规则" class="headerlink" title="2 规则"></a>2 规则</h4><ul><li>由 26 个英文字母大小写， 0 9 或 $ 组成</li><li>数字不可以开头。</li><li>不可以使用关键字和保留字，但能包含关键字和保留字。</li><li>Java 中严格区分大小写，长度无限制。</li><li>标识符不能包含空格。</li></ul><h4 id="3-命名规范"><a href="#3-命名规范" class="headerlink" title="3 命名规范"></a>3 命名规范</h4><ul><li>包名：xxxyyyzzz</li><li>类名、接口名：XxxYyyZzz</li><li>变量名、方法名：xxxYyyZzz</li><li>常亮名：XXX_YYY_ZZZ</li></ul><blockquote><p>在起名字时，为了提高阅读性，要尽量意义，“见名知意”。</p></blockquote><h3 id="三、变量"><a href="#三、变量" class="headerlink" title="三、变量"></a>三、变量</h3><h4 id="1-定义变量"><a href="#1-定义变量" class="headerlink" title="1 定义变量"></a>1 定义变量</h4><p><strong>格式</strong>：</p><ol><li>数据类型  变量名 = 变量值;</li><li>数据类型  变量名;<br>变量名 = 变量值;</li></ol><p><strong>注</strong>：</p><ol><li>变量必须先声明，后使用</li><li>变量都定义在其<strong>作用域</strong>内</li><li>同一个作用域内，不可以声明两个同名的变量</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VariableTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//变量的定义</span></span><br><span class="line"><span class="keyword">int</span> myAge = <span class="number">22</span>;</span><br><span class="line"><span class="comment">//变量的使用</span></span><br><span class="line">System.out.println(myAge);</span><br><span class="line"></span><br><span class="line"><span class="comment">//变量的声明</span></span><br><span class="line"><span class="keyword">int</span> myNumber;</span><br><span class="line"><span class="comment">//System.out.println(myNnmber);//赋值后才能使用</span></span><br><span class="line"><span class="comment">//变量的赋值</span></span><br><span class="line">myNumber = <span class="number">1001</span>;</span><br><span class="line">System.out.println(myNumber);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span> <span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//作用域不同，可以定义同名变量</span></span><br><span class="line"><span class="comment">//变量的定义</span></span><br><span class="line"><span class="keyword">int</span> myAge = <span class="number">22</span>;</span><br><span class="line"><span class="comment">//变量的使用</span></span><br><span class="line">System.out.println(myAge);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-变量的分类"><a href="#2-变量的分类" class="headerlink" title="2 变量的分类"></a>2 变量的分类</h4><h5 id="按数据类型分类"><a href="#按数据类型分类" class="headerlink" title="按数据类型分类"></a>按数据类型分类</h5><p><img src="/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%912%20%E5%8F%98%E9%87%8F/../images/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" alt="数据类型"></p><h5 id="按声明的位置分类"><a href="#按声明的位置分类" class="headerlink" title="*按声明的位置分类"></a>*按声明的位置分类</h5><p><img src="/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%912%20%E5%8F%98%E9%87%8F/../images/%E5%8F%98%E9%87%8F.png" alt="变量"></p><h4 id="3-基本数据类型"><a href="#3-基本数据类型" class="headerlink" title="3 基本数据类型"></a>3 基本数据类型</h4><h5 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h5><table><thead><tr><th align="center">byte</th><th align="center">short</th><th align="center">int</th><th align="center">long</th></tr></thead><tbody><tr><td align="center">1字节</td><td align="center">2字节</td><td align="center">4字节</td><td align="center">8字节</td></tr></tbody></table><blockquote><ol><li>byte范围：-128 ~ 127</li><li>声明long型变量，必须以”l”或”L”结尾</li><li>通常，定义整型变量时，使用int型。</li><li>整型的常量，默认类型是：int型</li></ol></blockquote><h5 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h5><table><thead><tr><th align="center">float</th><th align="center">double</th></tr></thead><tbody><tr><td align="center">4字节</td><td align="center">8字节</td></tr></tbody></table><blockquote><ol><li>浮点型，表示带小数点的数值</li><li>float表示数值的范围比long还大</li><li>定义float类型变量时，变量要以”f”或”F”结尾</li><li>通常，定义浮点型变量时，使用double型。</li><li>浮点型的常量，默认类型为：double</li></ol></blockquote><h5 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h5><table><thead><tr><th align="left">char</th></tr></thead><tbody><tr><td align="left">定义char型变量，通常使用一对’’,内部只能写一个字符</td></tr><tr><td align="left">表示方式：1. 声明一个字符 2. 转义字符 3. 直接使用 Unicode 值来表示字符型常量</td></tr></tbody></table><h5 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h5><table><thead><tr><th align="left">boolean</th></tr></thead><tbody><tr><td align="left">只能取两个值之一：true 、 false</td></tr><tr><td align="left">常常在条件判断、循环结构中使用</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VariableTest1</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//基本数据类型</span></span><br><span class="line"><span class="comment">//整型：byte 1字节 -128 ~ 127</span></span><br><span class="line"><span class="keyword">byte</span> b1 = <span class="number">12</span>;</span><br><span class="line"><span class="comment">//byte b2 = 128;</span></span><br><span class="line">System.out.println(b1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//整型：short 2字节</span></span><br><span class="line"><span class="comment">//整型：int 4字节</span></span><br><span class="line"><span class="comment">//整型：long 8字节 以'l'或'L'结尾</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//通常，定义整型变量时，使用int型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> l1 = <span class="number">123456789098765432L</span>;</span><br><span class="line"><span class="comment">//long l2 = 987654321012345678;</span></span><br><span class="line">System.out.println(l1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//浮点型：float 4字节 以'f'或'F'结尾</span></span><br><span class="line"><span class="comment">//浮点型：double 8字节</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 通常，定义浮点型变量时，使用double型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> f1 = <span class="number">123.45f</span>;</span><br><span class="line"><span class="comment">//float f2 = 678.90;</span></span><br><span class="line">System.out.println(f1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符型：char 1字符=2字节 用一对单引号''</span></span><br><span class="line"><span class="comment">//表示方式：</span></span><br><span class="line"><span class="comment">//1.声明一个字符 </span></span><br><span class="line"><span class="comment">//2.转义字符 </span></span><br><span class="line"><span class="comment">//3.直接使用 Unicode 值来表示字符型常量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> c1 = <span class="string">'A'</span>;</span><br><span class="line"><span class="comment">//char c2 = 'ab';</span></span><br><span class="line">System.out.println(c1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> c3 = <span class="string">'1'</span>;</span><br><span class="line"><span class="keyword">char</span> c4 = <span class="string">'の'</span>;</span><br><span class="line"><span class="keyword">char</span> c5 = <span class="string">'中'</span>;</span><br><span class="line">System.out.println(c3);</span><br><span class="line">System.out.println(c4);</span><br><span class="line">System.out.println(c5);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> c6 = <span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">char</span> c7 = <span class="string">'\t'</span>;</span><br><span class="line"><span class="keyword">char</span> c8 = <span class="string">'\u1001'</span>;</span><br><span class="line">System.out.println(<span class="string">"***"</span> + c6 + <span class="string">"***"</span>);</span><br><span class="line">System.out.println(<span class="string">"***"</span> + c7 + <span class="string">"***"</span>);</span><br><span class="line">System.out.println(c8);</span><br><span class="line"></span><br><span class="line"><span class="comment">//布尔型：boolean true/false </span></span><br><span class="line"><span class="comment">//常常在条件判断、循环结构中使用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> isMale = <span class="keyword">true</span>;</span><br><span class="line">System.out.println(isMale);</span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> isMarried = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">if</span> (isMarried)&#123;</span><br><span class="line">System.out.println(<span class="string">"Go home"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Go party"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、自动类型转换"><a href="#四、自动类型转换" class="headerlink" title="四、自动类型转换"></a>四、自动类型转换</h3><p>当容量小的数据类型的变量与容量大的数据类型的变量做运算时，结果自动提升为容量大的数据类型。<br>    <code>byte 、char 、short --&gt; int --&gt; long --&gt; float --&gt; double</code><br><strong>特别的</strong>：当byte、char、short三种类型的变量做运算时，结果为int型</p><blockquote><p>此时的容量大小指的是，表示数的范围的大和小。比如：float容量要大于long的容量</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VariableTest2</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span> b1 = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> i1 = <span class="number">129</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i2 = b1 + i1;</span><br><span class="line"><span class="keyword">long</span> l = b1 + i1;</span><br><span class="line"><span class="keyword">float</span> f = b1 + i1;</span><br><span class="line">System.out.println(i2);</span><br><span class="line">System.out.println(l);</span><br><span class="line">System.out.println(f);</span><br><span class="line"></span><br><span class="line"><span class="keyword">short</span> s1 = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">double</span> d1 = s1;</span><br><span class="line">System.out.println(d1);<span class="comment">//123.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//***************特别地*********************</span></span><br><span class="line"><span class="keyword">char</span> c1 = <span class="string">'a'</span>;<span class="comment">//97</span></span><br><span class="line"><span class="keyword">int</span> i3 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> i4 = c1 + i3;</span><br><span class="line">System.out.println(i4);</span><br><span class="line"></span><br><span class="line"><span class="keyword">short</span> s2 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">byte</span> b2 = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//char c3 = c1 + b2;//编译不通过</span></span><br><span class="line"><span class="comment">//short s3 = b2 + s2;//编译不通过</span></span><br><span class="line"><span class="comment">//short s4 = b1 + b2;//编译不通过</span></span><br><span class="line"><span class="comment">//****************************************</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、强制类型转换"><a href="#五、强制类型转换" class="headerlink" title="五、强制类型转换"></a>五、强制类型转换</h3><p>强转符：()</p><p><strong>注</strong>：强制类型转换，可能导致精度损失。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VariableTest3</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> d1 = <span class="number">12.9</span>;</span><br><span class="line"><span class="comment">//精度损失举例1</span></span><br><span class="line"><span class="keyword">int</span> i1 = (<span class="keyword">int</span>)d1;<span class="comment">//截断操作</span></span><br><span class="line">System.out.println(i1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//没有精度损失</span></span><br><span class="line"><span class="keyword">long</span> l1 = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">short</span> s2 = (<span class="keyword">short</span>)l1;</span><br><span class="line"></span><br><span class="line"><span class="comment">//精度损失举例2</span></span><br><span class="line"><span class="keyword">int</span> i2 = <span class="number">128</span>;</span><br><span class="line"><span class="keyword">byte</span> b = (<span class="keyword">byte</span>)i2;</span><br><span class="line">System.out.println(b);<span class="comment">//-128</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;标识符、保留字、变量&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://ActionDing.github.io/categories/Java/"/>
    
      <category term="Java基础" scheme="https://ActionDing.github.io/categories/Java/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java" scheme="https://ActionDing.github.io/tags/Java/"/>
    
      <category term="编程" scheme="https://ActionDing.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>【Java基础】1 第一个Java程序</title>
    <link href="https://actionding.github.io/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%911%20%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E7%A8%8B%E5%BA%8F/"/>
    <id>https://actionding.github.io/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%911%20%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E7%A8%8B%E5%BA%8F/</id>
    <published>2020-07-04T19:02:02.000Z</published>
    <updated>2020-07-20T03:16:55.517Z</updated>
    
    <content type="html"><![CDATA[<p><strong>国际惯例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 打印 Hello World</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello World"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="一、第一个Java程序"><a href="#一、第一个Java程序" class="headerlink" title="一、第一个Java程序"></a>一、第一个Java程序</h3><h4 id="1-编译运行过程"><a href="#1-编译运行过程" class="headerlink" title="1 编译运行过程"></a>1 编译运行过程</h4><p>①将 Java 代码编写到扩展名为 .java 的文件中。</p><p>②通过 javac 命令对该 java 文件进行<strong>编译</strong> 。</p><p>③通过 java 命令对生成的 class 文件进行<strong>运行</strong> 。</p><p><img src="/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%911%20%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E7%A8%8B%E5%BA%8F/../images/%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C%E8%BF%87%E7%A8%8B.png" alt="编译运行过程"></p><h4 id="2-具体步骤"><a href="#2-具体步骤" class="headerlink" title="2 具体步骤"></a>2 具体步骤</h4><p><strong>步骤一</strong>：打开记事本，输入以上代码，保存为 <code>HelloWorld.java</code></p><p><strong>步骤二</strong>：在保存文件的位置打开命令行，输入<code>javac HelloWorld.java</code>，会生成一个HelloWorld.class文件</p><p><strong>步骤三</strong>：命令行继续输入<code>java HelloWorld</code></p><p><img src="/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%911%20%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E7%A8%8B%E5%BA%8F/../images/helloworld.png" alt="helloworld"></p><h3 id="二、注释"><a href="#二、注释" class="headerlink" title="二、注释"></a>二、注释</h3><h4 id="1-单行注释"><a href="#1-单行注释" class="headerlink" title="1 单行注释"></a>1 单行注释</h4><p>​    格式：//注释文字</p><h4 id="2-多行注释"><a href="#2-多行注释" class="headerlink" title="2 多行注释"></a>2 多行注释</h4><p>​    格式：/* 注释文字 */</p><h4 id="3-文档注释"><a href="#3-文档注释" class="headerlink" title="3 文档注释"></a>3 文档注释</h4><p>​    <strong>格式</strong>：/**</p><p>​                @author 指定 java 程序的作者<br>​                @version 指定源文件的版本<br>​                */</p><p>​    注释内容可以被 JDK 提供的工具 javadoc 所解析，生成一套以网页文件形式体现的该程序的说明文档。</p><p>​    <strong>操作方式</strong>：<code>javadoc -d mydoc -author -version HelloWorld.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. Java注释的三种方式：</span></span><br><span class="line"><span class="comment">①单行注释</span></span><br><span class="line"><span class="comment">②多行注释</span></span><br><span class="line"><span class="comment">③文档注释（Java特有）</span></span><br><span class="line"><span class="comment">生成文档：javadoc -d mydoc -author -version HelloJava.java</span></span><br><span class="line"><span class="comment">mydoc为文档目录</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*****这属于多行注释*****</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"><span class="doctag">@author</span> Ding</span></span><br><span class="line"><span class="comment"><span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*****这属于文档注释*****</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloJava</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//main方法是程序的入口*****这属于单行注释*****</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印HelloJava</span></span><br><span class="line">System.out.println(<span class="string">"HelloJava"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="附"><a href="#附" class="headerlink" title="附"></a>附</h3><p><strong>Tips | 文件资源管理器</strong></p><p>①<code>win + E</code>打开文件资源管理器</p><p>②在地址栏输入 <code>cmd</code> 回车即可打开<strong>命令行</strong></p><p>③在查看工具栏中，打开<code>隐藏/显示</code>中的 <code>文件扩展名</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;国际惯例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 打印 Hello World&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HelloWorld&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://ActionDing.github.io/categories/Java/"/>
    
      <category term="Java基础" scheme="https://ActionDing.github.io/categories/Java/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java" scheme="https://ActionDing.github.io/tags/Java/"/>
    
      <category term="编程" scheme="https://ActionDing.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>【Java基础】0 Java语言概述</title>
    <link href="https://actionding.github.io/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%910%20Java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/"/>
    <id>https://actionding.github.io/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%910%20Java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/</id>
    <published>2020-07-04T19:02:01.000Z</published>
    <updated>2020-07-20T03:16:51.303Z</updated>
    
    <content type="html"><![CDATA[<p>Java 是 SUN (Stanford University Network, 斯坦福大学网络公司) 1995 年推出的一门高级编程语言。</p><p><a href="https://www.tiobe.com/tiobe-index/" target="_blank" rel="noopener"><strong>TIOBE 指数</strong></a></p><a id="more"></a><h3 id="一、Java简史"><a href="#一、Java简史" class="headerlink" title="一、Java简史"></a>一、Java简史</h3><p>1991 年 Green 项目，开发语言最初命名为 Oak ( 橡树 )<br>1994 年，开发组意识到 Oak 非常适合于互联网<br>1996 年，发布 JDK 1.0，约 8.3 万个网页应用 Java 技术来制作<br>1997 年，发布 JDK 1.1 JavaOne 会议召开，创当时全球同类会议规模之最<br>1998 年，发布 JDK 1.2 ，同年发布企业平台 J2EE<br>1999 年 Java 分成 J2SE 、 J2EE 和 J2ME JSP/Servlet 技术诞生<br><strong>2004 年，发布里程碑式版本： JDK 1.5 为突出此 版本的重要性，更名为 JDK 5.0</strong><br>2005 年 J2SE –&gt; JavaSE J2EE –&gt; JavaEE J2ME –&gt; JavaME<br>2009 年， Oracle 公司收购 SUN，交易价格 74 亿美元<br>2011 年，发布 JDK 7.0<br><strong>2014 年，发布 JDK 8.0 ，是继 JDK 5.0 以来变化最大的版本</strong><br>2017 年，发布 JDK 9.0 ，最大限度实现模块化<br>2018 年 3 月，发布 JDK 10.0 ，版本号也称为 18.3<br>2018 年 9 月，发布 JDK 11.0 ，版本号也称为 18.9</p><h3 id="二、Java技术体系平台"><a href="#二、Java技术体系平台" class="headerlink" title="二、Java技术体系平台"></a>二、Java技术体系平台</h3><h4 id="1-Java-SE"><a href="#1-Java-SE" class="headerlink" title="1 Java SE"></a>1 Java SE</h4><p>Java SE (Java Standard Edition) 标准版，支持面向桌面级应用（如Windows 下的应用程序）的 Java 平台，提供了完整的 Java 核心 API ，此版本以前称为 J2SE</p><h4 id="2-Java-EE"><a href="#2-Java-EE" class="headerlink" title="2 Java EE"></a>2 Java EE</h4><p>Java EE (Java Enterprise Edition) 企业版，为开发企业环境下的应用程序提供的一套解决方案。该技术体系中包含的技术如Servlet 、 Jsp 等，主要针对于 Web 应用程序开发。版本以前称为 J2EE</p><h4 id="3-Java-ME"><a href="#3-Java-ME" class="headerlink" title="3 Java ME"></a>3 Java ME</h4><p>Java ME (Java Micro Edition) 小型版，支持Java 程序运行在移动终端（手机、 PDA ）上的平台，对 Java API 有所精简，并加入了针对移动终端的支持，此版本以前称为 J2ME</p><h4 id="4-Java-Card"><a href="#4-Java-Card" class="headerlink" title="4 Java Card"></a>4 Java Card</h4><p>支持一些Java 小程序（ Applets ）运行在小内存设备（如智能卡）上的平台</p><h3 id="三、应用领域"><a href="#三、应用领域" class="headerlink" title="三、应用领域"></a>三、应用领域</h3><h4 id="1-企业级应用"><a href="#1-企业级应用" class="headerlink" title="1 企业级应用"></a>1 企业级应用</h4><p>主要指复杂的大企业的软件系统、各种类型的网站。Java 的安全机制以及它的跨平台的优势，使它在分布式系统领域开发中有广泛应用。应用领域包括金融、电信、交通、电子商务等。</p><h4 id="2-Android-平台应用"><a href="#2-Android-平台应用" class="headerlink" title="2 Android 平台应用"></a>2 Android 平台应用</h4><p>Android 应用程序使用 Java 语言编写。Android 开发水平的高低很大程度上取决于 Java 语言核心能力是否扎实。</p><h4 id="3-大数据平台开发"><a href="#3-大数据平台开发" class="headerlink" title="3 大数据平台开发"></a>3 大数据平台开发</h4><p>各类框架有 Hadoop spark storm flink 等，就这类技术生态圈来讲，还有各种中间件如 flume kafka sqoop 等等 ，这些框架以及工具大多数是用 Java 编写而成，但提供诸如 Java scala Python R 等各种语言 API 供编程。</p><h4 id="4-移动领域应用"><a href="#4-移动领域应用" class="headerlink" title="4 移动领域应用"></a>4 移动领域应用</h4><p>主要表现在消费和嵌入式领域，是指在各种小型设备上的应用，包括手机、 PDA 、机顶盒、汽车通信设备等。</p><h3 id="四、主要特性"><a href="#四、主要特性" class="headerlink" title="四、主要特性"></a>四、主要特性</h3><p>1 <strong>Java 语言是易学的</strong></p><p>2 <strong>Java 语言是强制面向对象的</strong></p><p>3 <strong>Java 语言是分布式的</strong></p><p>4 <strong>Java 语言是健壮的</strong></p><p>5 <strong>Java 语言是健壮的</strong></p><p>6 <strong>Java 语言是体系结构中立的</strong></p><p>7 <strong>Java 语言是解释型的</strong></p><p>8 <strong>Java 是性能略高的</strong></p><p>9 <strong>Java 语言是原生支持多线程的</strong></p><h3 id="五、Java语言运行机制"><a href="#五、Java语言运行机制" class="headerlink" title="五、Java语言运行机制"></a>五、Java语言运行机制</h3><h4 id="1-Java语言的特点"><a href="#1-Java语言的特点" class="headerlink" title="1 Java语言的特点"></a>1 Java语言的特点</h4><p>①面向对象</p><ul><li>两个基本概念：类、对象</li><li>三大特性：封装、继承、多态</li></ul><p>②健壮性</p><p>③跨平台性</p><h4 id="2-Java两种核心机制"><a href="#2-Java两种核心机制" class="headerlink" title="2 Java两种核心机制"></a>2 Java两种核心机制</h4><p>①<strong>Java虚拟机</strong>（Java Virtual Machine）</p><p>​    JVM 是一个虚拟的计算机，具有指令集并使用不同的存储区域。负责执行指令，管理数据、内存、寄存器 。</p><ul><li>对于不同的平台，有不同的 虚拟机。</li><li>Java 虚拟机机制屏蔽了底层运行平台的差别，实现了“ 一次编译，到处运行“</li></ul><p>②<strong>垃圾回收机制</strong>（Garbage Collection）</p><ul><li>不再使用的内存空间应回收–垃圾回收。</li><li>垃圾回收在 Java 程序运行过程中自动进行，程序员无法精确控制和干预。</li></ul><h4 id="3-Java语言的环境搭建"><a href="#3-Java语言的环境搭建" class="headerlink" title="3 Java语言的环境搭建"></a>3 Java语言的环境搭建</h4><p>①<strong>JDK</strong>(Java Development Kit Java 开发工具包)</p><p>②<strong>JRE</strong>(Java R untime Environment Java 运行环境 )</p><p>③<strong>JDK、 JRE 、JVM之间的关系</strong></p><p><img src="/2020/07/%E3%80%90Java%E5%9F%BA%E7%A1%80%E3%80%910%20Java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/../images/JDK%E3%80%81JRE%E3%80%81JVM%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.png" alt="JDK、JRE、JVM之间的关系"></p><ul><li>JDK = JRE + 开发工具集（例如 Javac 编译工具 等）</li><li>JRE = JVM + Java SE 标准类库</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java 是 SUN (Stanford University Network, 斯坦福大学网络公司) 1995 年推出的一门高级编程语言。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.tiobe.com/tiobe-index/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;TIOBE 指数&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://ActionDing.github.io/categories/Java/"/>
    
      <category term="Java基础" scheme="https://ActionDing.github.io/categories/Java/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java" scheme="https://ActionDing.github.io/tags/Java/"/>
    
      <category term="编程" scheme="https://ActionDing.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>【Python基础】流程控制</title>
    <link href="https://actionding.github.io/2020/07/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%91%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <id>https://actionding.github.io/2020/07/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%91%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</id>
    <published>2020-07-03T19:02:04.000Z</published>
    <updated>2020-07-19T07:23:07.166Z</updated>
    
    <content type="html"><![CDATA[<p>if 语句、for 语句和 while 语句</p><a id="more"></a><h3 id="一、if-语句"><a href="#一、if-语句" class="headerlink" title="一、if 语句"></a>一、if 语句</h3><p><strong>格式</strong>：<code>if...:[block] elif...:[block] else...:[block]</code></p><blockquote><p>关键字 <code>elif</code>  是 <code>else if</code>  的缩写</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x = int(input(<span class="string">"Please enter an integer: "</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">print(<span class="string">'Negative changed to zero'</span>)</span><br><span class="line"><span class="keyword">elif</span> x == <span class="number">0</span>:</span><br><span class="line">print(<span class="string">'Zero'</span>)</span><br><span class="line"><span class="keyword">elif</span> x == <span class="number">1</span>:</span><br><span class="line">print(<span class="string">'Single'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">'More'</span>)</span><br></pre></td></tr></table></figure><h3 id="二、for-语句"><a href="#二、for-语句" class="headerlink" title="二、for 语句"></a>二、for 语句</h3><p><strong>格式</strong>：<code>for...in...:[block]</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">words = [<span class="string">'cat'</span>, <span class="string">'window'</span>, <span class="string">'defenestrate'</span>]</span><br><span class="line"><span class="keyword">for</span> w <span class="keyword">in</span> words:</span><br><span class="line">print(w,len(w))</span><br></pre></td></tr></table></figure><h3 id="三、while-语句"><a href="#三、while-语句" class="headerlink" title="三、while 语句"></a>三、while 语句</h3><p><strong>格式</strong>：<code>while...:[block]</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> a &lt; <span class="number">10</span>:</span><br><span class="line">a, b = b, a + b</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;if 语句、for 语句和 while 语句&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://ActionDing.github.io/categories/Python/"/>
    
      <category term="Python基础" scheme="https://ActionDing.github.io/categories/Python/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="编程" scheme="https://ActionDing.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Python" scheme="https://ActionDing.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【Python基础】第一个Python程序</title>
    <link href="https://actionding.github.io/2020/07/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%91%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/"/>
    <id>https://actionding.github.io/2020/07/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%91%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/</id>
    <published>2020-07-03T19:02:01.000Z</published>
    <updated>2020-07-19T07:22:55.176Z</updated>
    
    <content type="html"><![CDATA[<p><strong>国际惯例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印 Hello World</span></span><br><span class="line">print(<span class="string">"Hello World"</span>)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="一、注释"><a href="#一、注释" class="headerlink" title="一、注释"></a>一、注释</h3><ol><li>单行注释<br> 格式：<code># 注释内容</code></li><li>多行注释<br> 格式：<code>&#39;&#39;&#39;注\n释\n内\n容&#39;&#39;&#39;</code> 或 <code>&quot;&quot;&quot;注\n释\n内\n容&quot;&quot;&quot;</code></li></ol><h3 id="二、标识符"><a href="#二、标识符" class="headerlink" title="二、标识符"></a>二、标识符</h3><ol><li>由字母、数字和下划线<code>_</code>组成</li><li>必须用字母或下划线 <code>_</code>开头</li><li>大小写敏感</li></ol><h3 id="三、语言特点"><a href="#三、语言特点" class="headerlink" title="三、语言特点"></a>三、语言特点</h3><ol><li>强制缩进</li><li>可使用 <code>\</code> 换行</li></ol><h3 id="四、建议"><a href="#四、建议" class="headerlink" title="四、建议"></a>四、建议</h3><ol><li>使用<code>python -h</code>查看帮助</li><li>善用<code>help()</code>方法</li></ol><h3 id="附：Python之禅"><a href="#附：Python之禅" class="headerlink" title="附：Python之禅"></a>附：Python之禅</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> this</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">The Zen of Python, by Tim Peters</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Beautiful is better than ugly.</span></span><br><span class="line"><span class="string">Explicit is better than implicit.</span></span><br><span class="line"><span class="string">Simple is better than complex.</span></span><br><span class="line"><span class="string">Complex is better than complicated.</span></span><br><span class="line"><span class="string">Flat is better than nested.</span></span><br><span class="line"><span class="string">Sparse is better than dense.</span></span><br><span class="line"><span class="string">Readability counts.</span></span><br><span class="line"><span class="string">Special cases aren't special enough to break the rules.</span></span><br><span class="line"><span class="string">Although practicality beats purity.</span></span><br><span class="line"><span class="string">Errors should never pass silently.</span></span><br><span class="line"><span class="string">Unless explicitly silenced.</span></span><br><span class="line"><span class="string">In the face of ambiguity, refuse the temptation to guess.</span></span><br><span class="line"><span class="string">There should be one-- and preferably only one --obvious way to do it.</span></span><br><span class="line"><span class="string">Although that way may not be obvious at first unless you're Dutch.</span></span><br><span class="line"><span class="string">Now is better than never.</span></span><br><span class="line"><span class="string">Although never is often better than *right* now.</span></span><br><span class="line"><span class="string">If the implementation is hard to explain, it's a bad idea.</span></span><br><span class="line"><span class="string">If the implementation is easy to explain, it may be a good idea.</span></span><br><span class="line"><span class="string">Namespaces are one honking great idea -- let's do more of those!</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;国际惯例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 打印 Hello World&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://ActionDing.github.io/categories/Python/"/>
    
      <category term="Python基础" scheme="https://ActionDing.github.io/categories/Python/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="编程" scheme="https://ActionDing.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Python" scheme="https://ActionDing.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【小工具】Markdown</title>
    <link href="https://actionding.github.io/2020/07/%E3%80%90%E5%B0%8F%E5%B7%A5%E5%85%B7%E3%80%91Markdown/"/>
    <id>https://actionding.github.io/2020/07/%E3%80%90%E5%B0%8F%E5%B7%A5%E5%85%B7%E3%80%91Markdown/</id>
    <published>2020-07-03T04:11:10.000Z</published>
    <updated>2020-07-19T07:24:25.368Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><a id="more"></a><h3 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h3><p>1.1级标题<br>   使用<code>=</code>（一个以上）或者<code>#</code>（一个）+ 空格<br>2.2级标题<br>   使用<code>-</code>（一个以上）或者<code>#</code>（两个）+ 空格<br>3.3-6级标题<br>   使用#（3-6个）+ 空格</p><h3 id="二、段落"><a href="#二、段落" class="headerlink" title="二、段落"></a>二、段落</h3><ol><li>换行<br>使用两个以上空格加回车</li><li>字体<ol><li>斜体<br>使用一对<code>*</code>或者<code>_</code></li><li>粗体<br>使用一对<code>**</code>或者<code>__</code></li><li>粗斜体<br>使用一对<code>***</code>或者<code>___</code></li></ol></li><li>分割线<br>使用两个以上的<code>*</code>、<code>-</code>或者<code>_</code></li><li>删除线<br>使用波浪线<code>~~删除线文本~~</code></li><li>下划线<br>使用HTML的标签<code>&lt;u&gt;下划线文本&lt;/u&gt;</code></li><li>脚注<br>使用<code>[^脚注]</code> +<code>[^脚注]:脚注内容</code></li><li>角标<br>上角标：使用<code>x^2^</code>–x^2^<br>下角标：使用<code>H~2~O</code>–H<del>2</del>O</li><li>高亮<br>使用等号<code>==高亮文本==</code><blockquote><p>角标和高亮在设置中打开</p></blockquote></li><li>居中<br>使用HTML的标签<code>&lt;center&gt;居中文本&lt;/center&gt;</code></li><li>目录<br>使用<code>[TOC]</code></li><li>表情<br>使用<code>:单词:</code></li></ol><h3 id="三、列表"><a href="#三、列表" class="headerlink" title="三、列表"></a>三、列表</h3><p>可分为<strong>有序列表</strong>和<strong>无序列表</strong>，可嵌套使用</p><ol><li>有序列表<br>使用<code>数字</code> + <code>.</code> + <code>空格</code></li><li>无序列表<br>使用<code>*</code>、<code>+</code>或者<code>-</code> + <code>空格</code></li></ol><h3 id="四、区块"><a href="#四、区块" class="headerlink" title="四、区块"></a>四、区块</h3><p>使用<code>&gt;</code> + <code>空格</code>，可嵌套，并可与列表嵌套</p><h3 id="五、代码"><a href="#五、代码" class="headerlink" title="五、代码"></a>五、代码</h3><ol><li>一行代码<br>使用一对反引号</li><li>一段代码<br>使用三个反引号</li></ol><h3 id="六、链接"><a href="#六、链接" class="headerlink" title="六、链接"></a>六、链接</h3><ol><li>使用<code>[链接名称](链接地址)</code>（链接名称可省略）</li><li>使用<code>[链接名称][变量]</code>（与脚注类似）</li></ol><h3 id="七、图片"><a href="#七、图片" class="headerlink" title="七、图片"></a>七、图片</h3><ol><li>使用<code>![alt 属性文本](图片地址)</code></li><li>把图片直接拖入文档自动创建</li></ol><h3 id="八、表格"><a href="#八、表格" class="headerlink" title="八、表格"></a>八、表格</h3><ol><li>使用<code>|</code>来分隔单元格</li><li>使用<code>-</code>来分隔表头</li><li>对齐方式<ul><li>左对齐：<code>:-</code></li><li>右对齐：<code>-:</code></li><li>居中对齐：<code>:-:</code></li></ul></li></ol><h3 id="附：快捷键"><a href="#附：快捷键" class="headerlink" title="附：快捷键"></a>附：快捷键</h3><table><thead><tr><th align="center">快捷键</th><th align="center">功能</th><th align="center">快捷键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">Ctrl+1</td><td align="center">一阶标题</td><td align="center">Ctrl+B</td><td align="center">字体加粗</td></tr><tr><td align="center">Ctrl+2</td><td align="center">二阶标题</td><td align="center">Ctrl+I</td><td align="center">字体倾斜</td></tr><tr><td align="center">Ctrl+3</td><td align="center">三阶标题</td><td align="center">Ctrl+U</td><td align="center">下划线</td></tr><tr><td align="center">Ctrl+4</td><td align="center">四阶标题</td><td align="center">Ctrl+Home</td><td align="center">返回顶部</td></tr><tr><td align="center">Ctrl+5</td><td align="center">五阶标题</td><td align="center">Ctrl+End</td><td align="center">返回底部</td></tr><tr><td align="center">Ctrl+6</td><td align="center">六阶标题</td><td align="center">Ctrl+T</td><td align="center">创建表格</td></tr><tr><td align="center">Ctrl+L</td><td align="center">选中某句话</td><td align="center">Ctrl+K</td><td align="center">创建超链接</td></tr><tr><td align="center">Ctrl+D</td><td align="center">选中某个单词</td><td align="center">Ctrl+F</td><td align="center">搜索</td></tr><tr><td align="center">Ctrl+E</td><td align="center">选中相同格式的文字</td><td align="center">Ctrl+H</td><td align="center">搜索并替换</td></tr><tr><td align="center">Alt+Shift+5</td><td align="center">删除线</td><td align="center">Ctrl+Shift+I</td><td align="center">插入图片</td></tr><tr><td align="center">Ctrl+Shift+M</td><td align="center">公式块</td><td align="center">Ctrl+Shift+Q</td><td align="center">引用</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="小工具" scheme="https://ActionDing.github.io/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Markdown" scheme="https://ActionDing.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>images</title>
    <link href="https://actionding.github.io/2020/07/images/"/>
    <id>https://actionding.github.io/2020/07/images/</id>
    <published>2020-06-30T16:00:00.000Z</published>
    <updated>2020-07-19T07:19:11.663Z</updated>
    
    <content type="html"><![CDATA[<h5 id="本文用于生成图片文件夹，点击这里转到主页"><a href="#本文用于生成图片文件夹，点击这里转到主页" class="headerlink" title="本文用于生成图片文件夹，点击这里转到主页"></a>本文用于生成图片文件夹，点击<a href="https://actionding.github.io/">这里</a>转到主页</h5><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;本文用于生成图片文件夹，点击这里转到主页&quot;&gt;&lt;a href=&quot;#本文用于生成图片文件夹，点击这里转到主页&quot; class=&quot;headerlink&quot; title=&quot;本文用于生成图片文件夹，点击这里转到主页&quot;&gt;&lt;/a&gt;本文用于生成图片文件夹，点击&lt;a href=&quot;https://actionding.github.io/&quot;&gt;这里&lt;/a&gt;转到主页&lt;/h5&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
